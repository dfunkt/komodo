name: Build Docker Image

on:
  push:
    branches: main

    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    env:
      PLATFORMS: "['linux/amd64', 'linux/amd64/v3', 'linux/arm64']"

    outputs:
      platforms: ${{ steps.extract-binaries.outputs.PLTF }}
      source-version: ${{ steps.extract-binaries.outputs.SOURCE_VERSION }}

    strategy:
      matrix:
        base: ["core","periphery"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.base }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure build platforms
        shell: bash
        run: |
          PLATFORMS=$(echo "${{ env.PLATFORMS }}" | tr -d "[' ]")
          echo "BUILD_PLATFORMS=$PLATFORMS" | tee -a "${GITHUB_ENV}"

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.BUILD_PLATFORMS }}
          push: true
          file: bin/${{ matrix.base }}/aio.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.base }}-buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.base }}-buildcache,compression=zstd,mode=max

      - name: Attest container image
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.base }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
